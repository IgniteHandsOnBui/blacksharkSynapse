{
	"name": "maxar_ard",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "Geospatialspark",
			"type": "BigDataPoolReference"
		},
		"targetSparkConfiguration": {
			"referenceName": "maxar_name",
			"type": "SparkConfigurationReference"
		},
		"sessionProperties": {
			"driverMemory": "56g",
			"driverCores": 8,
			"executorMemory": "56g",
			"executorCores": 8,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "2b784058-b640-4848-ae7f-9466a23c63c8"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/251b3efb-f673-4fa5-a56e-e2f645fc33fa/resourceGroups/innosyn-pipeline-rg/providers/Microsoft.Synapse/workspaces/innosyn-pipeline-syn-ws/bigDataPools/Geospatialspark",
				"name": "Geospatialspark",
				"type": "Spark",
				"endpoint": "https://innosyn-pipeline-syn-ws.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/Geospatialspark",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.1",
				"nodeCount": 10,
				"cores": 8,
				"memory": 56,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30,
			"targetSparkConfiguration": "maxar_name"
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# instal libraries"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"outputs_hidden": true
					}
				},
				"source": [
					"pip install max-ard[full] --extra-index-url https://packages.ard.maxar.com/"
				],
				"execution_count": 1
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Authenticate individual "
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from max_ard.session import get_user_session\r\n",
					""
				],
				"execution_count": 325
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import os\r\n",
					"\r\n",
					"# Set environment variables\r\n",
					"os.environ['ARD_USERNAME'] = 'hilario.lumbreras@chevron.com'\r\n",
					"os.environ['ARD_PASSWORD'] = 'LetsfindData&Inights2022'\r\n",
					"\r\n",
					"# Get environment variables\r\n",
					"ARD_USERNAME = os.getenv('ARD_USERNAME')\r\n",
					"ARD_USERNAME = os.environ.get('ARD_PASSWORD')   "
				],
				"execution_count": 326
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"r = get_user_session()"
				],
				"execution_count": 327
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Check Azure credentials"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from max_ard import AccountManager\r\n",
					"manager = AccountManager()\r\n",
					"# usage objects have a formatted __repr__\r\n",
					"print(manager.get_account_usage())"
				],
				"execution_count": 328
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"manager.list_credentials()"
				],
				"execution_count": 329
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Azure Blob Storage SAS URL\r\n",
					"token = \"https://stacdldev1.blob.core.windows.net/?sv=2021-08-06&ss=btqf&srt=sco&st=2022-11-07T16%3A35%3A10Z&se=2023-01-01T16%3A35%3A00Z&sp=rwlacup&sig=BPkvu2Cho6ZcnJAfD0oGqsPDUFow73R0D9QRQq84m9U%3D\"\r\n",
					"\r\n",
					""
				],
				"execution_count": 330
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# add a token\r\n",
					"manager.add_credentials(\"our-shared-credentials\", token, \"description of the credentials\")\r\n",
					"\r\n",
					"\r\n",
					""
				],
				"execution_count": 331
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# get a credential object\r\n",
					"creds = manager.get_credentials(\"our-shared-credentials\")\r\n",
					"creds"
				],
				"execution_count": 332
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"creds.created"
				],
				"execution_count": 333
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"creds.description\r\n",
					""
				],
				"execution_count": 334
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# list all credentials\r\n",
					"manager.list_credentials()"
				],
				"execution_count": 335
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# select ARD to tiles of SW portion of pipeline"
				]
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# 2015"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from max_ard import Select\r\n",
					"bbox = [-121.91, 37.988, -121.865, 38.03]\r\n",
					"datetime =  \"2015-10-01T00:00:00Z/2015-12-31T00:00:00Z\"\r\n",
					"query = {\r\n",
					"        \"platform\": {\r\n",
					"          \"eq\": \"worldview-02\"\r\n",
					"        },\r\n",
					"        \"aoi:cloud_free_percentage\": {\r\n",
					"          \"gte\": 95\r\n",
					"        },\r\n",
					"        \"aoi:data_percentage\": {\r\n",
					"          \"gte\": 75\r\n",
					"        }\r\n",
					"    }\r\n",
					"\r\n",
					"s_2015 = Select(datetime=datetime, bbox=bbox, query=query, stack_depth=3)"
				],
				"execution_count": 423
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from max_ard.exceptions import NotSubmitted\r\n",
					"print(s_2015.request)\r\n",
					"try:\r\n",
					"    print(s.state)\r\n",
					"except NotSubmitted:\r\n",
					"    print('The Select has not been submitted yet and does not have a state')"
				],
				"execution_count": 424
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"s_2015.submit()\r\n",
					"print(s_2015.state)\r\n",
					"print(s_2015.select_id)"
				],
				"execution_count": 425
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"s_2015.wait_for_success()\r\n",
					"print(f'Select {s_2015.select_id} is complete')"
				],
				"execution_count": 426
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"geojson = s_2015.get_link_contents('geojson')\r\n",
					"print(geojson)"
				],
				"execution_count": 427
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"link = s_2015.get_signed_link('html')\r\n",
					"print(link)"
				],
				"execution_count": 431
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from max_ard import Order\r\n",
					"s_2015.usage.cost.total_imagery_cost"
				],
				"execution_count": 445
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"results = s_2015.results\r\n",
					"print(f'Found the following acquisition IDs: {results.acquisition_ids}')\r\n",
					"print(f'Covering {len(results.stacks)} cells')\r\n",
					"print('Ordering this selection will use:')\r\n",
					"print(f'{s_2015.usage.area.total_imagery_sqkm} sq.km')"
				],
				"execution_count": 446
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"aquisition_2015 = results.acquisition_ids\r\n",
					""
				],
				"execution_count": 447
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# a GCS order for acquisitions using `output_config` and a credentials file\r\n",
					"output_config = {\r\n",
					"    \"azure_blob_storage\": {\r\n",
					"        \"sas_url\": \"https://stacdldev1.blob.core.windows.net/?sv=2021-08-06&ss=btqf&srt=sco&st=2022-11-07T16%3A35%3A10Z&se=2023-01-01T16%3A35%3A00Z&sp=rwlacup&sig=BPkvu2Cho6ZcnJAfD0oGqsPDUFow73R0D9QRQq84m9U%3D\",\r\n",
					"        \"container\": \"my-ard-container\",\r\n",
					"        \"prefix\": \"example/prefix\",\r\n",
					"        \"dry_run\": \"True\"\r\n",
					"    }\r\n",
					"}\r\n",
					"\r\n",
					"order = Order(output_config=output_config, acquisitions= aquisition_2015)\r\n",
					"\r\n",
					"# add notifications if needed, then submit the order\r\n",
					"order.add_email_notification('hilario.lumbreras@chevron.com')\r\n",
					"\r\n",
					""
				],
				"execution_count": 448
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": true
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"order.submit()"
				],
				"execution_count": 449
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# 2017"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from max_ard import Select\r\n",
					"bbox =[-121.91, 37.988, -121.865, 38.03]\r\n",
					"datetime =  \"2017-10-01T00:00:00Z/2017-12-31T00:00:00Z\"\r\n",
					"query = {\r\n",
					"        \"platform\": {\r\n",
					"          \"eq\": \"worldview-02\"\r\n",
					"        },\r\n",
					"        \"aoi:cloud_free_percentage\": {\r\n",
					"          \"gte\": 95\r\n",
					"        },\r\n",
					"        \"aoi:data_percentage\": {\r\n",
					"          \"gte\": 75\r\n",
					"        }\r\n",
					"    }\r\n",
					"\r\n",
					"s_2017 = Select(datetime=datetime, bbox=bbox, query=query, stack_depth=3)"
				],
				"execution_count": 457
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from max_ard.exceptions import NotSubmitted\r\n",
					"print(s_2017.request)\r\n",
					"try:\r\n",
					"    print(s_2017.state)\r\n",
					"except NotSubmitted:\r\n",
					"    print('The Select has not been submitted yet and does not have a state')"
				],
				"execution_count": 458
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"s_2017.submit()\r\n",
					"print(s_2017.state)\r\n",
					"print(s_2017.select_id)"
				],
				"execution_count": 459
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"s_2017.wait_for_success()\r\n",
					"print(f'Select {s_2017.select_id} is complete')"
				],
				"execution_count": 460
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"geojson = s_2017.get_link_contents('geojson')\r\n",
					"print(geojson)"
				],
				"execution_count": 461
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"link = s_2017.get_signed_link('html')\r\n",
					"print(link)"
				],
				"execution_count": 462
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from max_ard import Order\r\n",
					"s_2017.usage.cost.total_imagery_cost"
				],
				"execution_count": 463
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"results_2017 = s_2017.results\r\n",
					"print(f'Found the following acquisition IDs: {results_2017.acquisition_ids}')\r\n",
					"print(f'Covering {len(results_2017.stacks)} cells')\r\n",
					"print('Ordering this selection will use:')\r\n",
					"print(f'{s_2017.usage.area.total_imagery_sqkm} sq.km')"
				],
				"execution_count": 465
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"aquisition_2017 = results_2017.acquisition_ids"
				],
				"execution_count": 466
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# a GCS order for acquisitions using `output_config` and a credentials file\r\n",
					"output_config = {\r\n",
					"    \"azure_blob_storage\": {\r\n",
					"        \"sas_url\": \"https://stacdldev1.blob.core.windows.net/?sv=2021-08-06&ss=btqf&srt=sco&st=2022-11-07T16%3A35%3A10Z&se=2023-01-01T16%3A35%3A00Z&sp=rwlacup&sig=BPkvu2Cho6ZcnJAfD0oGqsPDUFow73R0D9QRQq84m9U%3D\",\r\n",
					"        \"container\": \"my-ard-container\",\r\n",
					"        \"prefix\": \"example/prefix\",\r\n",
					"        \"dry_run\": \"True\"\r\n",
					"    }\r\n",
					"}\r\n",
					"\r\n",
					"order = Order(output_config=output_config, acquisitions= aquisition_2017)\r\n",
					"\r\n",
					"# add notifications if needed, then submit the order\r\n",
					"order.add_email_notification('hilario.lumbreras@chevron.com')\r\n",
					""
				],
				"execution_count": 467
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": true
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"order.submit()"
				],
				"execution_count": 468
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# 2019"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from max_ard import Select\r\n",
					"bbox = [-121.91, 37.988, -121.865, 38.03]\r\n",
					"datetime =  \"2019-10-01T00:00:00Z/2019-12-31T00:00:00Z\"\r\n",
					"query = {\r\n",
					"        \"platform\": {\r\n",
					"          \"eq\": \"worldview-02\"\r\n",
					"        },\r\n",
					"        \"aoi:cloud_free_percentage\": {\r\n",
					"          \"gte\": 95\r\n",
					"        },\r\n",
					"        \"aoi:data_percentage\": {\r\n",
					"          \"gte\": 75\r\n",
					"        }\r\n",
					"    }\r\n",
					"\r\n",
					"s_2019 = Select(datetime=datetime, bbox=bbox, query=query, stack_depth=3)"
				],
				"execution_count": 473
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from max_ard.exceptions import NotSubmitted\r\n",
					"print(s_2019.request)\r\n",
					"try:\r\n",
					"    print(s_2019.state)\r\n",
					"except NotSubmitted:\r\n",
					"    print('The Select has not been submitted yet and does not have a state')"
				],
				"execution_count": 474
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"s_2019.submit()\r\n",
					"print(s_2019.state)\r\n",
					"print(s_2019.select_id)"
				],
				"execution_count": 475
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"s_2019.wait_for_success()\r\n",
					"print(f'Select {s_2019.select_id} is complete')"
				],
				"execution_count": 476
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"geojson = s_2019.get_link_contents('geojson')\r\n",
					"print(geojson)"
				],
				"execution_count": 477
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					""
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"link = s_2019.get_signed_link('html')\r\n",
					"print(link)"
				],
				"execution_count": 479
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from max_ard import Order\r\n",
					"s_2019.usage.cost.total_imagery_cost"
				],
				"execution_count": 480
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"results_2019 = s_2019.results\r\n",
					"print(f'Found the following acquisition IDs: {results_2019.acquisition_ids}')\r\n",
					"print(f'Covering {len(results_2019.stacks)} cells')\r\n",
					"print('Ordering this selection will use:')\r\n",
					"print(f'{s_2019.usage.area.total_imagery_sqkm} sq.km')"
				],
				"execution_count": 481
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"aquisition_2019 = results_2019.acquisition_ids"
				],
				"execution_count": 482
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# a GCS order for acquisitions using `output_config` and a credentials file\r\n",
					"output_config = {\r\n",
					"    \"azure_blob_storage\": {\r\n",
					"        \"sas_url\": \"https://stacdldev1.blob.core.windows.net/?sv=2021-08-06&ss=btqf&srt=sco&st=2022-11-07T16%3A35%3A10Z&se=2023-01-01T16%3A35%3A00Z&sp=rwlacup&sig=BPkvu2Cho6ZcnJAfD0oGqsPDUFow73R0D9QRQq84m9U%3D\",\r\n",
					"        \"container\": \"my-ard-container\",\r\n",
					"        \"prefix\": \"example/prefix\",\r\n",
					"        \"dry_run\": \"True\"\r\n",
					"    }\r\n",
					"}\r\n",
					"\r\n",
					"order = Order(output_config=output_config, acquisitions= aquisition_2019)\r\n",
					"\r\n",
					"# add notifications if needed, then submit the order\r\n",
					"order.add_email_notification('hilario.lumbreras@chevron.com')\r\n",
					""
				],
				"execution_count": 483
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"order.submit()"
				],
				"execution_count": 484
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					""
				],
				"execution_count": null
			}
		]
	}
}