{
	"name": "Blackshark Building Detection",
	"properties": {
		"activities": [
			{
				"name": "Wait for Blackshark Model",
				"type": "Until",
				"dependsOn": [
					{
						"activity": "Blackshark Model",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@and(and(not(equals(string(variables('FunctionCompleted')), 'running')), not(equals(string(variables('FunctionCompleted')), 'active'))), not(equals(string(variables('FunctionCompleted')), 'preparing')))",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Wait for Blackshark",
							"type": "Wait",
							"dependsOn": [
								{
									"activity": "Set FunctionCompleted Custom Vision",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 30
							}
						},
						{
							"name": "Check Status Blackshark",
							"type": "WebActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": {
									"value": "@concat('https://',pipeline().parameters.BatchName,'.',pipeline().parameters.BatchLocation,'.batch.azure.com/jobs/',pipeline().parameters.JobName,'/tasks/stllr-bshrk-task-', pipeline().RunId, '?api-version=2022-01-01.15.0')",
									"type": "Expression"
								},
								"connectVia": {
									"referenceName": "AutoResolveIntegrationRuntime",
									"type": "IntegrationRuntimeReference"
								},
								"method": "GET",
								"authentication": {
									"type": "MSI",
									"resource": "https://batch.core.windows.net/"
								}
							}
						},
						{
							"name": "Set FunctionCompleted Custom Vision",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Check Status Blackshark",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "FunctionCompleted",
								"value": {
									"value": "@activity('Check Status Blackshark').output['state']",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set FunctionError",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Check Status Blackshark",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "FunctionError",
								"value": {
									"value": "@activity('Check Status Blackshark').output['executionInfo']['failureInfo']",
									"type": "Expression"
								}
							}
						}
					],
					"timeout": "7.00:00:00"
				}
			},
			{
				"name": "Blackshark Model",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Create Config",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Create Geotiff",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Delete Results Directory placeholder",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Delete Logs Directory placeholder",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@concat('https://',pipeline().parameters.BatchName,'.',pipeline().parameters.BatchLocation,'.batch.azure.com/jobs/',pipeline().parameters.JobName,'/tasks?api-version=2020-03-01.11.0')",
						"type": "Expression"
					},
					"connectVia": {
						"referenceName": "AutoResolveIntegrationRuntime",
						"type": "IntegrationRuntimeReference"
					},
					"method": "POST",
					"headers": {
						"Content-type": "application/json; odata=minimalmetadata; charset=utf-8"
					},
					"body": {
						"value": "@json(concat('{\n  \"id\": \"stllr-bshrk-task-', pipeline().RunId, '\",\n  \"commandLine\": \"\",\n  \"containerSettings\": {\n    \"imageName\": \"', activity('Read Spec Document').output['runStatus'].output.sink.value[0]['algImageName'],'\",\n    \"containerRunOptions\": \"--rm --workdir / -v /mnt/batch/tasks/fsmounts/S/', pipeline().parameters.Prefix, ':', activity('Read Spec Document').output['runStatus'].output.sink.value[0]['mountedDirectory'], '\",\n    \"registry\": {\n        \"registryServer\": \"', split(activity('Read Spec Document').output['runStatus'].output.sink.value[0]['algImageName'], '/')[0], '\",\n        \"username\": \"external-msft\",\n        \"password\": \"9STIVwl2RiaQqDABXghQa7Xtliwz=JoY\"\n    }\n  },\n  \"userIdentity\": {\n        \"autoUser\": {\n            \"scope\": \"pool\",\n            \"elevationLevel\": \"admin\"\n        }\n    }\n}'))",
						"type": "Expression"
					},
					"authentication": {
						"type": "MSI",
						"resource": "https://batch.core.windows.net/"
					}
				}
			},
			{
				"name": "Copy Raster and Vector Output",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Wait for Blackshark Model",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "BinarySource",
						"storeSettings": {
							"type": "AzureFileStorageReadSettings",
							"recursive": true,
							"wildcardFolderPath": {
								"value": "@concat(pipeline().parameters.Prefix, '/', activity('Read Spec Document').output['runStatus'].output.sink.value[0]['resultsDirectory'])",
								"type": "Expression"
							},
							"wildcardFileName": "*.*",
							"deleteFilesAfterCompletion": false
						},
						"formatSettings": {
							"type": "BinaryReadSettings"
						}
					},
					"sink": {
						"type": "BinarySink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "gls",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "gld",
						"type": "DatasetReference",
						"parameters": {
							"DestinationFolderPath": "detections",
							"DestinationContainerName": {
								"value": "@pipeline().parameters.Prefix",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Read Spec Document",
				"type": "ExecuteDataFlow",
				"dependsOn": [],
				"policy": {
					"timeout": "1.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "ReadSpecDocumentFlow",
						"type": "DataFlowReference",
						"datasetParameters": {
							"source": {
								"filename": "bshrk-building.json",
								"folderpath": "config",
								"containername": {
									"value": "@pipeline().parameters.Prefix",
									"type": "Expression"
								}
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "None",
					"cacheSinks": {
						"firstRowOnly": true
					}
				}
			},
			{
				"name": "Create Results Directory with placeholder",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Read Spec Document",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "BinarySource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"maxConcurrentConnections": 15,
							"recursive": true,
							"wildcardFolderPath": "config",
							"wildcardFileName": {
								"value": "@activity('Read Spec Document').output['runStatus'].output.sink.value[0]['contextFileName']",
								"type": "Expression"
							},
							"deleteFilesAfterCompletion": false
						},
						"formatSettings": {
							"type": "BinaryReadSettings"
						}
					},
					"sink": {
						"type": "BinarySink",
						"storeSettings": {
							"type": "AzureFileStorageWriteSettings"
						}
					},
					"enableStaging": false
				}
			},
			{
				"name": "Create Logs Directory with placeholder_copy1",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Read Spec Document",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "BinarySource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"maxConcurrentConnections": 15,
							"recursive": true,
							"wildcardFolderPath": "config",
							"wildcardFileName": {
								"value": "@activity('Read Spec Document').output['runStatus'].output.sink.value[0]['contextFileName']",
								"type": "Expression"
							},
							"deleteFilesAfterCompletion": false
						},
						"formatSettings": {
							"type": "BinaryReadSettings"
						}
					},
					"sink": {
						"type": "BinarySink",
						"storeSettings": {
							"type": "AzureFileStorageWriteSettings"
						}
					},
					"enableStaging": false
				}
			},
			{
				"name": "Create Geotiff",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Read Spec Document",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "BinarySource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"maxConcurrentConnections": 15,
							"recursive": true,
							"wildcardFolderPath": "warp",
							"wildcardFileName": "*.tif",
							"deleteFilesAfterCompletion": false
						},
						"formatSettings": {
							"type": "BinaryReadSettings"
						}
					},
					"sink": {
						"type": "BinarySink",
						"storeSettings": {
							"type": "AzureFileStorageWriteSettings"
						}
					},
					"enableStaging": false
				}
			},
			{
				"name": "Create Config",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Read Spec Document",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "BinarySource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"maxConcurrentConnections": 15,
							"recursive": true,
							"wildcardFolderPath": "config",
							"wildcardFileName": {
								"value": "@activity('Read Spec Document').output['runStatus'].output.sink.value[0]['contextFileName']",
								"type": "Expression"
							},
							"deleteFilesAfterCompletion": false
						},
						"formatSettings": {
							"type": "BinaryReadSettings"
						}
					},
					"sink": {
						"type": "BinarySink",
						"storeSettings": {
							"type": "AzureFileStorageWriteSettings"
						}
					},
					"enableStaging": false
				}
			},
			{
				"name": "Delete Results Directory placeholder",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "Create Results Directory with placeholder",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"logStorageSettings": {
						"linkedServiceName": {
							"referenceName": "Stellar Airbus v2",
							"type": "LinkedServiceReference"
						}
					},
					"enableLogging": true,
					"storeSettings": {
						"type": "AzureFileStorageReadSettings",
						"recursive": true,
						"wildcardFileName": "*.*",
						"enablePartitionDiscovery": false
					}
				}
			},
			{
				"name": "Delete Logs Directory placeholder",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "Create Logs Directory with placeholder_copy1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"logStorageSettings": {
						"linkedServiceName": {
							"referenceName": "Stellar Airbus v2",
							"type": "LinkedServiceReference"
						}
					},
					"enableLogging": true,
					"storeSettings": {
						"type": "AzureFileStorageReadSettings",
						"recursive": true,
						"wildcardFileName": "*.*",
						"enablePartitionDiscovery": false
					}
				}
			}
		],
		"parameters": {
			"Prefix": {
				"type": "string",
				"defaultValue": "innoblackshark"
			},
			"BatchName": {
				"type": "string",
				"defaultValue": "innosynorcbatchact"
			},
			"BatchLocation": {
				"type": "string",
				"defaultValue": "southcentralus"
			},
			"JobName": {
				"type": "string",
				"defaultValue": "blackshark-model"
			},
			"StorageAccountName": {
				"type": "string",
				"defaultValue": "rawdatajbqezt"
			},
			"StorageAccountKey": {
				"type": "string",
				"defaultValue": "AHOTVR7kOK3lLcJV177VGv8WaPpTd7GfYdds2XFWD7gLDD89bIzAbMj47eeLWCS+igKPwum0Ip1lCVpEUdtIrA=="
			}
		},
		"variables": {
			"FunctionCompleted": {
				"type": "String"
			},
			"FunctionError": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2022-05-31T20:09:05Z"
	},
	"type": "Microsoft.Synapse/workspaces/pipelines"
}